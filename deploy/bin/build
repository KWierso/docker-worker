#! /bin/bash

set -e

cmd_help() {
  echo "Usage: ./deploy/bin/build"
  echo
  echo 'Wrapper for the `packer` build tool with docker-worker specific logic.'
  echo
  echo "Commands:"
  echo "  help: show this help message"
  echo "  app: build the app packer target"
  echo "  base: build the base packer target"
}

packer_run() {
  echo $@
  echo
  echo
  echo "packer $@"
  time packer $@
}

template_vars() {
  echo "deploy/target/packer/$1.json"
}

packer_config() {
  echo "deploy/packer/$1.json"
}

cmd_app() {
  local docker_worker_tgz=/tmp/docker-worker-$$.tgz
  # Package up the node app.
  tar \
    --exclude='./node_modules' \
    --exclude='./*.pub' \
    --exclude='./build/' \
    --exclude='./deploy' \
    --exclude='.test' \
    --exclude='.git' \
    --exclude='.vagrant' \
    --exclude='./.DS_Store' \
    --exclude='./vagrant/' \
    --exclude='app.box' \
    --exclude='./worker-types-backup.json' \
    --exclude='./docker-worker-amis.json' \
    --exclude='./packer-artifacts.json' \
    -zcvf $docker_worker_tgz .
  mv $docker_worker_tgz docker-worker.tgz

  # Configure the deployment if needed...
  make -j100 -C deploy
}

cmd_base() {
  # build config file
  make target/packer/base.json -C deploy
}

case "$1" in
"app")
  cmd_app ${@:2}
  ;;
"base")
  cmd_base ${@:2}
  ;;
*)
  cmd_help
  ;;
esac

