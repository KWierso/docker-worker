import { scopeMatch } from 'taskcluster-base/utils';
import taskcluster from 'taskcluster';

/**
 * Do the taskScopes satisfy all of the scopes for the given resources?
 *
 * The required scopes are generated by adding the prefix to each resource.
 * The `resources` can be an array or an object, in which case the iteration is
 * over the keys.
 *
 * @param {string} prefix
 * @param {object or array} resources
 * @param {array} taskScopes
 */
export async function hasPrefixedScopes(prefix, resources, taskScopes) {
  let auth = new taskcluster.Auth();
  let expandedScopes = await auth.expandScopes(taskScopes);
  let neededScopes = Object.keys(resources).map((r) => { return prefix + r; });
  return scopeMatch(expandedScopes, [neededScopes]);
}
